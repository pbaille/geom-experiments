;; Analyzed by ClojureScript 1.7.228
{:name thi.ng.domus.utils, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {goog.string.format goog.string.format, str clojure.string, clojure.string clojure.string}, :imports nil, :defs {format-date-time {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 48, :column 7, :end-line 48, :end-column 23, :arglists (quote ([d]))}, :name thi.ng.domus.utils/format-date-time, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 23, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, now {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 51, :column 7, :end-line 51, :end-column 10, :arglists (quote ([]))}, :name thi.ng.domus.utils/now, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 10, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, parse-float {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 26, :column 7, :end-line 26, :end-column 18, :arglists (quote ([x] [x nf])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x nf]), :arglists ([x] [x nf]), :arglists-meta (nil nil)}}, :name thi.ng.domus.utils/parse-float, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [x nf]), :arglists ([x] [x nf]), :arglists-meta (nil nil)}, :method-params ([x] [x nf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists ([x] [x nf])}, new-uuid {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 63, :column 7, :end-line 63, :end-column 15, :arglists (quote ([]))}, :name thi.ng.domus.utils/new-uuid, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 15, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, as-str {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 12, :column 7, :end-line 12, :end-column 13, :arglists (quote ([x]))}, :name thi.ng.domus.utils/as-str, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, html-entities {:name thi.ng.domus.utils/html-entities, :file "resources/public/js/thi/ng/domus/utils.cljs", :line 6, :column 1, :end-line 6, :end-column 19, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 6, :column 6, :end-line 6, :end-column 19}}, format-date {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 32, :column 7, :end-line 32, :end-column 18, :arglists (quote ([d]))}, :name thi.ng.domus.utils/format-date, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 18, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, format-time {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 40, :column 7, :end-line 40, :end-column 18, :arglists (quote ([d]))}, :name thi.ng.domus.utils/format-time, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 18, :method-params ([d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 1, :fn-var true, :arglists (quote ([d]))}, rand-16bits-hex {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 60, :column 7, :end-line 60, :end-column 22, :arglists (quote ([]))}, :name thi.ng.domus.utils/rand-16bits-hex, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, rand-bits {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 54, :column 7, :end-line 54, :end-column 16, :arglists (quote ([pow]))}, :name thi.ng.domus.utils/rand-bits, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 16, :method-params ([pow]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pow]))}, rand-bits-hex {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 57, :column 7, :end-line 57, :end-column 20, :arglists (quote ([pow]))}, :name thi.ng.domus.utils/rand-bits-hex, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 20, :method-params ([pow]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pow]))}, parse-int {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 20, :column 7, :end-line 20, :end-column 16, :arglists (quote ([x] [x radix nf])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x] [x radix nf]), :arglists ([x] [x radix nf]), :arglists-meta (nil nil)}}, :name thi.ng.domus.utils/parse-int, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([x] [x radix nf]), :arglists ([x] [x radix nf]), :arglists-meta (nil nil)}, :method-params ([x] [x radix nf]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists ([x] [x radix nf])}, escape-html {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/domus/utils.cljs", :line 17, :column 7, :end-line 17, :end-column 18, :arglists (quote ([x]))}, :name thi.ng.domus.utils/escape-html, :variadic false, :file "resources/public/js/thi/ng/domus/utils.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}}