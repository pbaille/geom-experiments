;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name thi.ng.geom.rect, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, bm thi.ng.geom.basicmesh, a thi.ng.geom.aabb, thi.ng.geom.types.utils thi.ng.geom.types.utils, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, thi.ng.xerror.core thi.ng.xerror.core, thi.ng.geom.core.vector thi.ng.geom.core.vector, isec thi.ng.geom.core.intersect, thi.ng.math.core thi.ng.math.core, thi.ng.geom.basicmesh thi.ng.geom.basicmesh, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, err thi.ng.xerror.core, types thi.ng.geom.types, g thi.ng.geom.core, tu thi.ng.geom.types.utils, thi.ng.geom.aabb thi.ng.geom.aabb, thi.ng.geom.core.intersect thi.ng.geom.core.intersect, d thi.ng.dstruct.core}, :uses {vec3 thi.ng.geom.core.vector, vec2 thi.ng.geom.core.vector, *eps* thi.ng.math.core}, :defs {rect {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 20, :column 7, :end-line 20, :end-column 11, :arglists (quote ([] [w] [p q] [x y w] [x y w h])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [w] [p q] [x y w] [x y w h]), :arglists ([] [w] [p q] [x y w] [x y w h]), :arglists-meta (nil nil nil nil nil)}}, :name thi.ng.geom.rect/rect, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([] [w] [p q] [x y w] [x y w h]), :arglists ([] [w] [p q] [x y w] [x y w h]), :arglists-meta (nil nil nil nil nil)}, :method-params ([] [w] [p q] [x y w] [x y w h]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists ([] [w] [p q] [x y w] [x y w h])}, union {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 37, :column 7, :end-line 37, :end-column 12, :arglists (quote ([{p :p, [w h] :size} {q :p, [qw qh] :size}]))}, :name thi.ng.geom.rect/union, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 12, :method-params ([p__23024 p__23025]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{p :p, [w h] :size} {q :p, [qw qh] :size}]))}, left {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 46, :column 7, :end-line 46, :end-column 11, :arglists (quote ([r]))}, :name thi.ng.geom.rect/left, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 11, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, right {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 47, :column 7, :end-line 47, :end-column 12, :arglists (quote ([r]))}, :name thi.ng.geom.rect/right, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 12, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, bottom {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 48, :column 7, :end-line 48, :end-column 13, :arglists (quote ([r]))}, :name thi.ng.geom.rect/bottom, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 13, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, bottom-left {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 49, :column 7, :end-line 49, :end-column 18, :arglists (quote ([r]))}, :name thi.ng.geom.rect/bottom-left, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 18, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, top {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 50, :column 7, :end-line 50, :end-column 10, :arglists (quote ([r]))}, :name thi.ng.geom.rect/top, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 10, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}, top-right {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/rect.cljc", :line 51, :column 7, :end-line 51, :end-column 16, :arglists (quote ([r]))}, :name thi.ng.geom.rect/top-right, :variadic false, :file "resources/public/js/thi/ng/geom/rect.cljc", :end-column 16, :method-params ([r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([r]))}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:num :fn :dir :offset :scale :default :type :points :size :rows :cols :mesh :depth :coincident :p}, :order [:p :size :num :cols :rows :depth :scale :offset :mesh :points :type :coincident :dir :default :fn]}, :doc nil}