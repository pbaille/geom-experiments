;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name thi.ng.geom.bezier, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, thi.ng.geom.types.utils.ptf thi.ng.geom.types.utils.ptf, ptf thi.ng.geom.types.utils.ptf, thi.ng.geom.types.utils thi.ng.geom.types.utils, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, thi.ng.geom.core.vector thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, g thi.ng.geom.core, tu thi.ng.geom.types.utils, d thi.ng.dstruct.core}, :uses {vec3 thi.ng.geom.core.vector, vec2 thi.ng.geom.core.vector, *resolution* thi.ng.geom.core}, :defs {auto-spline2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 72, :column 7, :end-line 72, :end-column 19, :arglists (quote ([points] [points closed?])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [points closed?]), :arglists ([points] [points closed?]), :arglists-meta (nil nil)}}, :name thi.ng.geom.bezier/auto-spline2, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [points closed?]), :arglists ([points] [points closed?]), :arglists-meta (nil nil)}, :method-params ([points] [points closed?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists ([points] [points closed?])}, auto-spline3 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 87, :column 7, :end-line 87, :end-column 19, :arglists (quote ([points] [points closed?])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [points closed?]), :arglists ([points] [points closed?]), :arglists-meta (nil nil)}}, :name thi.ng.geom.bezier/auto-spline3, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([points] [points closed?]), :arglists ([points] [points closed?]), :arglists-meta (nil nil)}, :method-params ([points] [points closed?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 2, :fn-var true, :arglists ([points] [points closed?])}, bezier3 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 84, :column 7, :end-line 84, :end-column 14, :arglists (quote ([points]))}, :name thi.ng.geom.bezier/bezier3, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 14, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 84, :end-line 84, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, bezier2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 69, :column 7, :end-line 69, :end-column 14, :arglists (quote ([points]))}, :name thi.ng.geom.bezier/bezier2, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 14, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}, auto-spline* {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 59, :column 7, :end-line 59, :end-column 19, :arglists (quote ([points cpoints]))}, :name thi.ng.geom.bezier/auto-spline*, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 19, :method-params ([points cpoints]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 2, :fn-var true, :arglists (quote ([points cpoints]))}, interpolate {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([[a b c d] t]))}, :name thi.ng.geom.bezier/interpolate, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 18, :method-params ([p__21335 t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[a b c d] t]))}, bernstein {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([t]))}, :name thi.ng.geom.bezier/bernstein, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 16, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, sample-segment {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 24, :column 7, :end-line 24, :end-column 21, :arglists (quote ([seg res]))}, :name thi.ng.geom.bezier/sample-segment, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 21, :method-params ([seg res]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([seg res]))}, sample-with-res {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 28, :column 7, :end-line 28, :end-column 22, :arglists (quote ([res include-last? points]))}, :name thi.ng.geom.bezier/sample-with-res, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 22, :method-params ([res include-last? points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 3, :fn-var true, :arglists (quote ([res include-last? points]))}, find-cpoints* {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/bezier.cljc", :line 37, :column 8, :end-line 37, :end-column 21, :private true, :arglists (quote ([ctor tight points]))}, :private true, :name thi.ng.geom.bezier/find-cpoints*, :variadic false, :file "resources/public/js/thi/ng/geom/bezier.cljc", :end-column 21, :method-params ([ctor tight points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ctor tight points]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:dist :points :res :profile}, :order [:points :res :dist :profile]}, :doc nil}