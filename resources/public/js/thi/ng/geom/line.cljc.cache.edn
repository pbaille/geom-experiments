;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name thi.ng.geom.line, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, bm thi.ng.geom.basicmesh, thi.ng.geom.types.utils thi.ng.geom.types.utils, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, thi.ng.geom.core.vector thi.ng.geom.core.vector, isec thi.ng.geom.core.intersect, thi.ng.math.core thi.ng.math.core, thi.ng.geom.basicmesh thi.ng.geom.basicmesh, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, types thi.ng.geom.types, g thi.ng.geom.core, tu thi.ng.geom.types.utils, thi.ng.geom.core.intersect thi.ng.geom.core.intersect, d thi.ng.dstruct.core}, :uses {vec3 thi.ng.geom.core.vector, vec2 thi.ng.geom.core.vector, *eps* thi.ng.math.core}, :defs {line2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/line.cljc", :line 20, :column 7, :end-line 20, :end-column 12, :arglists (quote ([[p q]] [p q] [px py qx qy])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[p q]] [p q] [px py qx qy]), :arglists ([[p q]] [p q] [px py qx qy]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.line/line2, :variadic false, :file "resources/public/js/thi/ng/geom/line.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([[p q]] [p q] [px py qx qy]), :arglists ([[p q]] [p q] [px py qx qy]), :arglists-meta (nil nil nil)}, :method-params ([[p q]] [p q] [px py qx qy]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 4, :fn-var true, :arglists ([[p q]] [p q] [px py qx qy])}, line3 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/line.cljc", :line 25, :column 7, :end-line 25, :end-column 12, :arglists (quote ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz]), :arglists ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz]), :arglists-meta (nil nil nil nil)}}, :name thi.ng.geom.line/line3, :variadic false, :file "resources/public/js/thi/ng/geom/line.cljc", :end-column 12, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz]), :arglists ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz]), :arglists-meta (nil nil nil nil)}, :method-params ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz]), :protocol-impl nil, :arglists-meta (nil nil nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 6, :fn-var true, :arglists ([[p q]] [p q] [px py qx qy] [px py pz qx qy qz])}, linestrip2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/line.cljc", :line 31, :column 7, :end-line 31, :end-column 17, :arglists (quote ([points] [p & more])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([points]), :arglists ([points] [p & more]), :arglists-meta (nil nil)}}, :name thi.ng.geom.line/linestrip2, :variadic true, :file "resources/public/js/thi/ng/geom/line.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params ([points]), :arglists ([points] [p & more]), :arglists-meta (nil nil)}, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists ([points] [p & more])}, reflect-on-ray {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/line.cljc", :line 35, :column 7, :end-line 35, :end-column 21, :arglists (quote ([ctor p q rc dir]))}, :name thi.ng.geom.line/reflect-on-ray, :variadic false, :file "resources/public/js/thi/ng/geom/line.cljc", :end-column 21, :method-params ([ctor p q rc dir]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctor p q rc dir]))}, reflect-on-line {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/line.cljc", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([ctor p q rp rq]))}, :name thi.ng.geom.line/reflect-on-line, :variadic false, :file "resources/public/js/thi/ng/geom/line.cljc", :end-column 22, :method-params ([ctor p q rp rq]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctor p q rp rq]))}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:offset :scale :points :mesh :depth}, :order [:points :mesh :depth :scale :offset]}, :doc nil}