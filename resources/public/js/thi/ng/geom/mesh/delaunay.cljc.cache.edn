;; Analyzed by ClojureScript 1.7.228
{:name thi.ng.geom.mesh.delaunay, :doc nil, :excludes #{}, :use-macros nil, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :uses {circumcircle-raw thi.ng.geom.triangle, triangle2 thi.ng.geom.triangle, *eps* thi.ng.math.core, delta= thi.ng.math.core}, :requires {g thi.ng.geom.core, thi.ng.geom.core thi.ng.geom.core, thi.ng.geom.triangle thi.ng.geom.triangle, m thi.ng.math.core, thi.ng.math.core thi.ng.math.core}, :imports nil, :defs {add-unique-edge! {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :line 12, :column 8, :end-line 12, :end-column 24, :private true, :arglists (quote ([edges p q]))}, :private true, :name thi.ng.geom.mesh.delaunay/add-unique-edge!, :variadic false, :file "resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :end-column 24, :method-params ([edges p q]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([edges p q]))}, compute-edges {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :line 20, :column 8, :end-line 20, :end-column 21, :private true, :arglists (quote ([complete tris [px py]]))}, :private true, :name thi.ng.geom.mesh.delaunay/compute-edges, :variadic false, :file "resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :end-column 21, :method-params ([complete tris p__29943]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 3, :fn-var true, :arglists (quote ([complete tris [px py]]))}, triangle-spec {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :line 40, :column 8, :end-line 40, :end-column 21, :private true, :arglists (quote ([a b c]))}, :private true, :name thi.ng.geom.mesh.delaunay/triangle-spec, :variadic false, :file "resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :end-column 21, :method-params ([a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b c]))}, shared-vertex? {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :line 45, :column 8, :end-line 45, :end-column 22, :private true, :arglists (quote ([a1 b1 c1 [a2 b2 c2]]))}, :private true, :name thi.ng.geom.mesh.delaunay/shared-vertex?, :variadic false, :file "resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :end-column 22, :method-params ([a1 b1 c1 p__29952]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 4, :fn-var true, :arglists (quote ([a1 b1 c1 [a2 b2 c2]]))}, triangulate {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :line 51, :column 7, :end-line 51, :end-column 18, :arglists (quote ([points]))}, :name thi.ng.geom.mesh.delaunay/triangulate, :variadic false, :file "resources/public/js/thi/ng/geom/mesh/delaunay.cljc", :end-column 18, :method-params ([points]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 1, :fn-var true, :arglists (quote ([points]))}}}