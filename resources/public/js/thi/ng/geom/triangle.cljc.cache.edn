;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name thi.ng.geom.triangle, :imports nil, :requires {thi.ng.geom.core.utils thi.ng.geom.core.utils, bm thi.ng.geom.basicmesh, thi.ng.geom.types.utils thi.ng.geom.types.utils, thi.ng.geom.core thi.ng.geom.core, gu thi.ng.geom.core.utils, v thi.ng.geom.core.vector, thi.ng.xerror.core thi.ng.xerror.core, thi.ng.geom.core.vector thi.ng.geom.core.vector, isec thi.ng.geom.core.intersect, thi.ng.math.core thi.ng.math.core, thi.ng.geom.basicmesh thi.ng.geom.basicmesh, m thi.ng.math.core, thi.ng.dstruct.core thi.ng.dstruct.core, thi.ng.geom.types thi.ng.geom.types, err thi.ng.xerror.core, g thi.ng.geom.core, tu thi.ng.geom.types.utils, thi.ng.geom.core.intersect thi.ng.geom.core.intersect, d thi.ng.dstruct.core}, :uses {V3Z thi.ng.geom.core.vector, vec3 thi.ng.geom.core.vector, PI thi.ng.math.core, HALF_PI thi.ng.math.core, vec2 thi.ng.geom.core.vector, *eps* thi.ng.math.core, THIRD thi.ng.math.core, SQRT3 thi.ng.math.core}, :defs {check-edge {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 90, :column 7, :end-line 90, :end-column 17, :arglists (quote ([splits classifier e p q add-p? add-q?]))}, :name thi.ng.geom.triangle/check-edge, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 17, :method-params ([splits classifier e p q add-p? add-q?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 7, :fn-var true, :arglists (quote ([splits classifier e p q add-p? add-q?]))}, norm-altitude {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 79, :column 7, :end-line 79, :end-column 20, :arglists (quote ([points id] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([points id] [a b c]), :arglists ([points id] [a b c]), :arglists-meta (nil nil)}}, :name thi.ng.geom.triangle/norm-altitude, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([points id] [a b c]), :arglists ([points id] [a b c]), :arglists-meta (nil nil)}, :method-params ([points id] [a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 3, :fn-var true, :arglists ([points id] [a b c])}, circumcircle-raw {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 135, :column 7, :end-line 135, :end-column 23, :arglists (quote ([[ax ay :as a] [bx by :as b] [cx cy :as c]]))}, :name thi.ng.geom.triangle/circumcircle-raw, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 23, :method-params ([p__23655 p__23656 p__23657]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 3, :fn-var true, :arglists (quote ([[ax ay :as a] [bx by :as b] [cx cy :as c]]))}, altitude {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 70, :column 7, :end-line 70, :end-column 15, :arglists (quote ([[a b c] id] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[a b c] id] [a b c]), :arglists ([[a b c] id] [a b c]), :arglists-meta (nil nil)}}, :name thi.ng.geom.triangle/altitude, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([[a b c] id] [a b c]), :arglists ([[a b c] id] [a b c]), :arglists-meta (nil nil)}, :method-params ([[a b c] id] [a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 3, :fn-var true, :arglists ([[a b c] id] [a b c])}, other-point-in-tri {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 62, :column 7, :end-line 62, :end-column 25, :arglists (quote ([[ta tb tc] a b]))}, :name thi.ng.geom.triangle/other-point-in-tri, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 25, :method-params ([p__23607 a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 3, :fn-var true, :arglists (quote ([[ta tb tc] a b]))}, triangle2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([t] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t] [a b c]), :arglists ([t] [a b c]), :arglists-meta (nil nil)}}, :name thi.ng.geom.triangle/triangle2, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t] [a b c]), :arglists ([t] [a b c]), :arglists-meta (nil nil)}, :method-params ([t] [a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 3, :fn-var true, :arglists ([t] [a b c])}, equilateral2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([l] [a b] [x1 y1 x2 y2])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([l] [a b] [x1 y1 x2 y2]), :arglists ([l] [a b] [x1 y1 x2 y2]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.triangle/equilateral2, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([l] [a b] [x1 y1 x2 y2]), :arglists ([l] [a b] [x1 y1 x2 y2]), :arglists-meta (nil nil nil)}, :method-params ([l] [a b] [x1 y1 x2 y2]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 4, :fn-var true, :arglists ([l] [a b] [x1 y1 x2 y2])}, circumcircle {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 163, :column 7, :end-line 163, :end-column 19, :arglists (quote ([t] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t] [a b c]), :arglists ([t] [a b c]), :arglists-meta (nil nil)}}, :name thi.ng.geom.triangle/circumcircle, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t] [a b c]), :arglists ([t] [a b c]), :arglists-meta (nil nil)}, :method-params ([t] [a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 3, :fn-var true, :arglists ([t] [a b c])}, centroid {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 86, :column 7, :end-line 86, :end-column 15, :arglists (quote ([a b c] [[a b c]])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b c] [[a b c]]), :arglists ([a b c] [[a b c]]), :arglists-meta (nil nil)}}, :name thi.ng.geom.triangle/centroid, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([a b c] [[a b c]]), :arglists ([a b c] [[a b c]]), :arglists-meta (nil nil)}, :method-params ([a b c] [[a b c]]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 3, :fn-var true, :arglists ([a b c] [[a b c]])}, slice-with* {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 104, :column 7, :end-line 104, :end-column 18, :arglists (quote ([t e] [[a b c] e classifier] [a b c e classifier])), :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([t e] [[a b c] e classifier] [a b c e classifier]), :arglists ([t e] [[a b c] e classifier] [a b c e classifier]), :arglists-meta (nil nil nil)}}, :name thi.ng.geom.triangle/slice-with*, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 5, :method-params ([t e] [[a b c] e classifier] [a b c e classifier]), :arglists ([t e] [[a b c] e classifier] [a b c e classifier]), :arglists-meta (nil nil nil)}, :method-params ([t e] [[a b c] e classifier] [a b c e classifier]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 104, :end-line 104, :max-fixed-arity 5, :fn-var true, :arglists ([t e] [[a b c] e classifier] [a b c e classifier])}, equilateral3 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 54, :column 7, :end-line 54, :end-column 19, :arglists (quote ([a b n]))}, :name thi.ng.geom.triangle/equilateral3, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 19, :method-params ([a b n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 3, :fn-var true, :arglists (quote ([a b n]))}, triangle3 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/resources/public/js/thi/ng/geom/triangle.cljc", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([t] [a b c])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t] [a b c]), :arglists ([t] [a b c]), :arglists-meta (nil nil)}}, :name thi.ng.geom.triangle/triangle3, :variadic false, :file "resources/public/js/thi/ng/geom/triangle.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([t] [a b c]), :arglists ([t] [a b c]), :arglists-meta (nil nil)}, :method-params ([t] [a b c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists ([t] [a b c])}}, :require-macros {mm thi.ng.math.macros, thi.ng.math.macros thi.ng.math.macros}, :cljs.analyzer/constants {:seen #{:q :dir :default :type :points :c :mesh :b :coincident :p :a}, :order [:a :b :c :default :p :q :points :type :coincident :dir :mesh]}, :doc nil}