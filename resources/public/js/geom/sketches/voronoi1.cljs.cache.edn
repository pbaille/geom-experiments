;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name geom.sketches.voronoi1, :imports nil, :requires {thi.ng.geom.polygon thi.ng.geom.polygon, p geom.utils.prob, dom thi.ng.domus.core, thi.ng.color.core thi.ng.color.core, thi.ng.geom.webgl.animator thi.ng.geom.webgl.animator, polygon thi.ng.geom.polygon, thi.ng.geom.core thi.ng.geom.core, v thi.ng.geom.core.vector, thi.ng.geom.svg.core thi.ng.geom.svg.core, thi.ng.geom.core.vector thi.ng.geom.core.vector, thi.ng.math.core thi.ng.math.core, geom.utils.svg geom.utils.svg, m thi.ng.math.core, geom.utils.prob geom.utils.prob, geom.utils.from-d3 geom.utils.from-d3, geom.utils.colors geom.utils.colors, thi.ng.color.presets thi.ng.color.presets, cp thi.ng.color.presets, c thi.ng.color.core, g thi.ng.geom.core, thi.ng.domus.core thi.ng.domus.core, thi.ng.geom.mesh.delaunay thi.ng.geom.mesh.delaunay, svg thi.ng.geom.svg.core}, :uses {triangulate thi.ng.geom.mesh.delaunay, voronoi geom.utils.from-d3, polygon->line geom.utils.from-d3, animate thi.ng.geom.webgl.animator, init-svg! geom.utils.svg, grad-palette geom.utils.colors, clipped-voronoi geom.utils.from-d3, vec2 thi.ng.geom.core.vector}, :defs {moving-voro3 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 96, :column 7, :end-line 96, :end-column 19, :arglists (quote ([{:keys [n width height]}]))}, :name geom.sketches.voronoi1/moving-voro3, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 19, :method-params ([p__21301]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n width height]}]))}, blue-scaler {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 139, :column 7, :end-line 139, :end-column 18, :arglists (quote ([area]))}, :name geom.sketches.voronoi1/blue-scaler, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 18, :method-params ([area]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 139, :max-fixed-arity 1, :fn-var true, :arglists (quote ([area]))}, rand-voro {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 30, :column 7, :end-line 30, :end-column 16, :arglists (quote ([{:keys [n width height]}]))}, :name geom.sketches.voronoi1/rand-voro, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 16, :method-params ([p__21274]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n width height]}]))}, moving-voro5 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 169, :column 7, :end-line 169, :end-column 19, :arglists (quote ([{:keys [n width height]}]))}, :name geom.sketches.voronoi1/moving-voro5, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 19, :method-params ([p__21321]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n width height]}]))}, moving-voro {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 42, :column 7, :end-line 42, :end-column 18, :arglists (quote ([{:keys [n width height]}]))}, :name geom.sketches.voronoi1/moving-voro, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 18, :method-params ([p__21281]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n width height]}]))}, moving-voro2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 64, :column 7, :end-line 64, :end-column 19, :arglists (quote ([{:keys [n width height]}]))}, :name geom.sketches.voronoi1/moving-voro2, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 19, :method-params ([p__21289]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n width height]}]))}, blues {:name geom.sketches.voronoi1/blues, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 21, :column 1, :end-line 21, :end-column 11, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 21, :column 6, :end-line 21, :end-column 11}}, no-exit2 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 129, :column 7, :end-line 129, :end-column 15, :arglists (quote ([w h]))}, :name geom.sketches.voronoi1/no-exit2, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 15, :method-params ([w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 2, :fn-var true, :arglists (quote ([w h]))}, pinks {:name geom.sketches.voronoi1/pinks, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 18, :column 1, :end-line 18, :end-column 11, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 18, :column 6, :end-line 18, :end-column 11}}, palette {:name geom.sketches.voronoi1/palette, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 24, :column 1, :end-line 24, :end-column 13, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 24, :column 6, :end-line 24, :end-column 13}}, vec2-noise-seq {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 86, :column 7, :end-line 86, :end-column 21, :arglists (quote ([[xscope yscope] agitation]))}, :name geom.sketches.voronoi1/vec2-noise-seq, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 21, :method-params ([p__21295 agitation]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[xscope yscope] agitation]))}, moving-voro6 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 192, :column 7, :end-line 192, :end-column 19, :arglists (quote ([{:keys [n-calm n-nervous width height]}]))}, :name geom.sketches.voronoi1/moving-voro6, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 19, :method-params ([p__21330]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n-calm n-nervous width height]}]))}, rand-particles {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 26, :column 7, :end-line 26, :end-column 21, :arglists (quote ([n [width height] & [pal]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(n [width height] [pal])], :arglists ([n [width height] & [pal]]), :arglists-meta (nil)}}, :name geom.sketches.voronoi1/rand-particles, :variadic true, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(n [width height] [pal])], :arglists ([n [width height] & [pal]]), :arglists-meta (nil)}, :method-params [(n [width height] [pal])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists ([n [width height] & [pal]])}, moving-voro4 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 145, :column 7, :end-line 145, :end-column 19, :arglists (quote ([{:keys [n width height]}]))}, :name geom.sketches.voronoi1/moving-voro4, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 19, :method-params ([p__21313]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 145, :end-line 145, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [n width height]}]))}, no-exit1 {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :line 119, :column 7, :end-line 119, :end-column 15, :arglists (quote ([w h]))}, :name geom.sketches.voronoi1/no-exit1, :variadic false, :file "/Users/pierre/Code/Clojure/generative-design/geom/src/geom/sketches/voronoi1.cljs", :end-column 15, :method-params ([w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 119, :end-line 119, :max-fixed-arity 2, :fn-var true, :arglists (quote ([w h]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :path :calm-seqs :stroke :n-nervous :color :else :n :fill :nervous-seqs :width :light-coral :nervous-seeds :dark-violet :seed :calm-seeds :stroke-width :light-skyblue :d :x :n-calm :height :polygon}, :order [:light-coral :light-skyblue :color :n :width :height :stroke :fill :seed :polygon :path :d :x :y :else :dark-violet :stroke-width :n-calm :n-nervous :calm-seeds :calm-seqs :nervous-seeds :nervous-seqs]}, :doc nil}