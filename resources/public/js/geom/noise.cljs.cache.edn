;; Analyzed by ClojureScript 1.7.228
{:name geom.noise, :doc nil, :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires nil, :imports nil, :defs {dot {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 25, :column 7, :end-line 25, :end-column 10, :arglists (quote ([X Y]))}, :name geom.noise/dot, :variadic false, :file "src/geom/noise.cljs", :end-column 10, :method-params ([X Y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 2, :fn-var true, :arglists (quote ([X Y]))}, get-gradient {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 11, :column 7, :end-line 11, :end-column 19, :arglists (quote ([[a b]]))}, :name geom.noise/get-gradient, :variadic false, :file "src/geom/noise.cljs", :end-column 19, :method-params ([p__22026]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([[a b]]))}, gradients {:name geom.noise/gradients, :file "src/geom/noise.cljs", :line 3, :column 1, :end-line 3, :end-column 15, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 3, :column 6, :end-line 3, :end-column 15}}, influences {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([x y]))}, :name geom.noise/influences, :variadic false, :file "src/geom/noise.cljs", :end-column 17, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, noise {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 53, :column 7, :end-line 53, :end-column 12, :arglists (quote ([x y]))}, :name geom.noise/noise, :variadic false, :file "src/geom/noise.cljs", :end-column 12, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, corner-gradients {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 38, :column 7, :end-line 38, :end-column 23, :arglists (quote ([x y]))}, :name geom.noise/corner-gradients, :variadic false, :file "src/geom/noise.cljs", :end-column 23, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, lerp {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([t a b]))}, :name geom.noise/lerp, :variadic false, :file "src/geom/noise.cljs", :end-column 11, :method-params ([t a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 3, :fn-var true, :arglists (quote ([t a b]))}, ease {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 33, :column 7, :end-line 33, :end-column 11, :arglists (quote ([t]))}, :name geom.noise/ease, :variadic false, :file "src/geom/noise.cljs", :end-column 11, :method-params ([t]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([t]))}, corner-to-point-vectors {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 42, :column 7, :end-line 42, :end-column 30, :arglists (quote ([x y]))}, :name geom.noise/corner-to-point-vectors, :variadic false, :file "src/geom/noise.cljs", :end-column 30, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, get-corners {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/noise.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([x y]))}, :name geom.noise/get-corners, :variadic false, :file "src/geom/noise.cljs", :end-column 18, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}}}