;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name geom.utils.colors, :imports {XhrIo goog.net.XhrIo}, :requires {cljsjs.d3 cljsjs.d3, c thi.ng.color.core, thi.ng.color.core thi.ng.color.core, cp thi.ng.color.presets, thi.ng.color.presets thi.ng.color.presets, XhrIo goog.net.XhrIo}, :uses nil, :defs {palettes-req {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 17, :column 7, :end-line 17, :end-column 19, :arglists (quote ([w]))}, :name geom.utils.colors/palettes-req, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 19, :method-params ([w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 1, :fn-var true, :arglists (quote ([w]))}, colors-req {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 30, :column 7, :end-line 30, :end-column 17, :arglists (quote ([w]))}, :name geom.utils.colors/colors-req, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 17, :method-params ([w]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([w]))}, rand-palette {:name geom.utils.colors/rand-palette, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 24, :column 1, :end-line 24, :end-column 18, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 24, :column 6, :end-line 24, :end-column 18}}, get-json {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 9, :column 7, :end-line 9, :end-column 15, :arglists (quote ([url success]))}, :name geom.utils.colors/get-json, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 15, :method-params ([url success]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url success]))}, colors->map {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 27, :column 7, :end-line 27, :end-column 18, :arglists (quote ([x]))}, :name geom.utils.colors/colors->map, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, top-palettes {:name geom.utils.colors/top-palettes, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 22, :column 1, :end-line 22, :end-column 18, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 22, :column 6, :end-line 22, :end-column 18}}, new-palettes {:name geom.utils.colors/new-palettes, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 23, :column 1, :end-line 23, :end-column 18, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 23, :column 6, :end-line 23, :end-column 18}}, css {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 59, :column 7, :end-line 59, :end-column 10, :arglists (quote ([x]))}, :name geom.utils.colors/css, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, grad-palette {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 64, :column 7, :end-line 64, :end-column 19, :arglists (quote ([c1 c2 n]))}, :name geom.utils.colors/grad-palette, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 19, :method-params ([c1 c2 n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 3, :fn-var true, :arglists (quote ([c1 c2 n]))}, wes-anderson {:name geom.utils.colors/wes-anderson, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 41, :column 1, :end-line 41, :end-column 18, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 41, :column 6, :end-line 41, :end-column 18}}, rand-color {:name geom.utils.colors/rand-color, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 37, :column 1, :end-line 37, :end-column 16, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 37, :column 6, :end-line 37, :end-column 16}}, top-colors {:name geom.utils.colors/top-colors, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 35, :column 1, :end-line 35, :end-column 16, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 35, :column 6, :end-line 35, :end-column 16}}, palettes->map {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 14, :column 7, :end-line 14, :end-column 20, :arglists (quote ([x]))}, :name geom.utils.colors/palettes->map, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, new-colors {:name geom.utils.colors/new-colors, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 36, :column 1, :end-line 36, :end-column 16, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/colors.cljs", :line 36, :column 6, :end-line 36, :end-column 16}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:royal1 :grandbudapest :rushmore :moonrise1 :moonrise3 :chevalier :grandbudapest2 :royal2 :zissou :moonrise2 :cavalcanti :fantasticfox :darjeeling2 :bottlerocket2 :bottlerocket :darjeeling}, :order [:royal1 :grandbudapest :rushmore :moonrise1 :moonrise3 :chevalier :grandbudapest2 :royal2 :zissou :moonrise2 :cavalcanti :fantasticfox :darjeeling2 :bottlerocket2 :bottlerocket :darjeeling]}, :doc nil}