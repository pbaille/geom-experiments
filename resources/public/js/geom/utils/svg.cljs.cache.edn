;; Analyzed by ClojureScript 1.7.228
{:use-macros {html hiccups.core}, :excludes #{}, :name geom.utils.svg, :imports nil, :requires {dom thi.ng.domus.core, thi.ng.domus.core thi.ng.domus.core, svg thi.ng.geom.svg.core, thi.ng.geom.svg.core thi.ng.geom.svg.core, hiccupsrt hiccups.runtime, hiccups.runtime hiccups.runtime}, :uses nil, :defs {svg-tags {:name geom.utils.svg/svg-tags, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/svg.cljs", :line 7, :column 1, :end-line 7, :end-column 14, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/svg.cljs", :line 7, :column 6, :end-line 7, :end-column 14}}, init-svg! {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/svg.cljs", :line 9, :column 7, :end-line 9, :end-column 16, :arglists (quote ([root [width height]]))}, :name geom.utils.svg/init-svg!, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/svg.cljs", :end-column 16, :method-params ([root p__20082]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([root [width height]]))}, svg {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/utils/svg.cljs", :line 16, :column 7, :end-line 16, :end-column 10, :arglists (quote ([parent-selector attrs & childs])), :doc "in order to avoid clip-path wrong rendering", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(parent-selector attrs childs)], :arglists ([parent-selector attrs & childs]), :arglists-meta (nil)}}, :name geom.utils.svg/svg, :variadic true, :file "/Users/pierre/Code/Clojure/geom/src/geom/utils/svg.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(parent-selector attrs childs)], :arglists ([parent-selector attrs & childs]), :arglists-meta (nil)}, :method-params [(parent-selector attrs childs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists ([parent-selector attrs & childs]), :doc "in order to avoid clip-path wrong rendering"}}, :require-macros {hiccups hiccups.core, hiccups.core hiccups.core}, :cljs.analyzer/constants {:seen #{:width :id :class :height}, :order [:width :height :id :class]}, :doc nil}