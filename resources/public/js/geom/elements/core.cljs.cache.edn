;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{}, :name geom.elements.core, :imports nil, :requires {m thi.ng.math.core, thi.ng.math.core thi.ng.math.core, g thi.ng.geom.core, thi.ng.geom.core thi.ng.geom.core, v thi.ng.geom.core.vector, thi.ng.geom.core.vector thi.ng.geom.core.vector, svg thi.ng.geom.svg.core, thi.ng.geom.svg.core thi.ng.geom.svg.core}, :uses {vec2 thi.ng.geom.core.vector}, :defs {do-interactions {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 45, :column 7, :end-line 45, :end-column 22, :arglists (quote ([xs]))}, :name geom.elements.core/do-interactions, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 22, :method-params ([xs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 1, :fn-var true, :arglists (quote ([xs]))}, step {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 39, :column 7, :end-line 39, :end-column 11, :arglists (quote ([x]))}, :name geom.elements.core/step, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, apply-force {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 16, :column 7, :end-line 16, :end-column 18, :arglists (quote ([{:keys [vel mass vlim], :as m} f]))}, :name geom.elements.core/apply-force, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 18, :method-params ([p__21506 f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [vel mass vlim], :as m} f]))}, show {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 42, :column 7, :end-line 42, :end-column 11, :arglists (quote ([x]))}, :name geom.elements.core/show, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 11, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, act? {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 41, :column 7, :end-line 41, :end-column 11, :arglists (quote ([x y]))}, :name geom.elements.core/act?, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 11, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, element {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([opts]))}, :name geom.elements.core/element, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 14, :method-params ([opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([opts]))}, v0 {:name geom.elements.core/v0, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 8, :column 1, :end-line 8, :end-column 8, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 8, :column 6, :end-line 8, :end-column 8}}, get-older {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 24, :column 7, :end-line 24, :end-column 16, :arglists (quote ([m]))}, :name geom.elements.core/get-older, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 16, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, act {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 40, :column 7, :end-line 40, :end-column 10, :arglists (quote ([x y]))}, :name geom.elements.core/act, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 10, :method-params ([x y]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x y]))}, elements {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 54, :column 7, :end-line 54, :end-column 15, :arglists (quote ([& xs])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}}, :name geom.elements.core/elements, :variadic true, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(xs)], :arglists ([& xs]), :arglists-meta (nil)}, :method-params [(xs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists ([& xs])}, round {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 10, :column 7, :end-line 10, :end-column 12, :arglists (quote ([precision d])), :doc "Round a double to the given precision (number of significant digits)"}, :name geom.elements.core/round, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 12, :method-params ([precision d]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([precision d])), :doc "Round a double to the given precision (number of significant digits)"}, mover-step {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 21, :column 7, :end-line 21, :end-column 17, :arglists (quote ([{:keys [vel loc], :as m}]))}, :name geom.elements.core/mover-step, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 17, :method-params ([p__21511]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [vel loc], :as m}]))}, svg {:protocol-inline nil, :meta {:file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :line 43, :column 7, :end-line 43, :end-column 10, :arglists (quote ([x]))}, :name geom.elements.core/svg, :variadic false, :file "/Users/pierre/Code/Clojure/geom/src/geom/elements/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:act? :unnamed :mass :age :name :xs :act :svg :vlim :vel :fixed :loc :step :show}, :order [:vel :mass :vlim :loc :age :act? :act :svg :step :show :fixed :name :unnamed :xs]}, :doc nil}